import discord
from discord import app_commands
from discord.ext import commands, tasks
import asyncio
import json
import random
import myutils
import datetime

reset_time = datetime.time(hour=21, minute=00, tzinfo=datetime.timezone.utc)

class GM(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.users = {}
        self.load()
        self.reset.start()
        
    group = app_commands.Group(name='gm', description='–£—Ç—Ä–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ —Å –∫–æ—Ñ–µ')
        
    @group.command(name='top', description='–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ì–ú–æ–≤')
    async def gmtop(self, interaction: discord.Interaction):
        self.sort()
        msg = ''
        i = 1
        for id, data in self.users.items():
            if data['count'] == 0:
                continue
            
            msg += f"\n**{i}.** <@{id}>: {data['count']} ({data['count']-data['bonus']}+{data['bonus']})"
            i += 1
                	
        embed = discord.Embed(title="–¢–æ–ø –ø–æ GM", description=msg)
        await interaction.response.send_message(embed=embed)
    
    @group.command(name='offer', description='–°–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É –ì–ú–æ–≤ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
    async def offer(self, interaction: discord.Interaction, receiver: discord.Member, amount: int, comment: str):
        sender_profile = self.get_user(interaction.user.id)
        receiver_profile = self.get_user(receiver.id)
        
        if interaction.user.id == receiver.id:
            await interaction.response.send_message('–ó–∞—á–µ–º?', ephemeral=True)
            return
        elif sender_profile == None or sender_profile['count'] < amount:
            await interaction.response.send_message('–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ì–ú–æ–≤ :(', ephemeral=True)
            return
        elif amount <= 0:
            await interaction.response.send_message('–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥—ë–Ω–Ω–∞—è —Å—É–º–º–∞', ephemeral=True)
            return
        
        embed = discord.Embed(title='–ü–µ—Ä–µ–¥–∞—á–∞ –ì–ú–æ–≤')
        msg = f'–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: <@{interaction.user.id}>\n–°—É–º–º–∞: {amount}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: ``{comment}``'
        msg += '\n\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é ‚úÖ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ'
        embed.description = msg
        
        offer_msg = await  interaction.channel.send(content = f'<@{receiver.id}>', embed=embed)
        await offer_msg.add_reaction('‚úÖ')
        
        await interaction.response.send_message('–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω', ephemeral=True)
        
        def check(reaction, user):
            return user == receiver and str(reaction.emoji) == '‚úÖ' and reaction.message == offer_msg
        
        try:
            reaction, user = await self.bot.wait_for('reaction_add', timeout=3600.0, check=check)
        except asyncio.TimeoutError:
            await offer_msg.channel.send(reference = offer_msg, content='–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ')
        else:
            if receiver_profile == None:
                receiver_profile = self.register_user(receiver_profile)
             
            if sender_profile['count'] < amount:
                await offer_msg.channel.send(reference = offer_msg, content='–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...')
             
            sender_profile['count'] -= amount
            receiver_profile['count'] += amount
            
            await offer_msg.channel.send(reference = offer_msg, content='–°–¥–µ–ª–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ')
        
    @group.command(name='forcereset', description='–ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Ä–µ—Å–µ—Ç –≤ 00:00 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª')
    async def force_reset(self, interaction: discord.Interaction):
        if interaction.user.id != 269105396587823104:
            await interaction.response.send_message('–Ω–µ-–∞', ephemeral=True)
            return   
        
        await self.reset()
        await interaction.response.send_message('–≥–æ—Ç–æ–≤–æ', ephemeral=True)
    
    @group.command(name='gif', description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–∏—Ñ–æ–∫ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞')
    async def gif_command(self, interaction: discord.Interaction, query: str):
        profile = self.get_user(interaction.user.id)
        if profile == None or profile['count'] < 100:
            await interaction.response.send_message('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ 100 –ì–ú–æ–≤', ephemeral=True)
            return
        
        profile['custom_query'] = query
        await interaction.response.send_message(f'–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≥–∏—Ñ–æ–∫ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∑–∞–ø—Ä–æ—Å ``{query}``', ephemeral=True)
                      
    async def gm_command(self, msg):
        user = self.get_user(msg.author.id)
        
        if user == None:
            user = self.register_user(msg.author.id)
            
        if user['done']:
           embed = discord.Embed(description='–¢—ã —É–∂–µ –∑–∞–±—Ä–∞–ª —Å–≤–æ–π –ì–ú —Å–µ–≥–æ–¥–Ω—è! (–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ 00:00 –ø–æ –ú–°–ö)', color=discord.Color.red())
           await msg.channel.send(reference=msg, embed=embed)
           return
       
        embed = discord.Embed(title='Good morning!', color=discord.Color.yellow())
        desc = ''
       
        guess = 1
        guessed = False
        for word in msg.content.split():
            try:
                num = int(word)
                if num >= 1 and num <= 1000:
                    guess = num
                    guessed = True
                    break
            except ValueError:
                continue
                
        rand = random.randint(1, 1000)       
        bonus = 0
        diff = abs(rand - guess)
        
        if guessed:
            desc += f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {rand} (—Ä–∞–∑–Ω–∏—Ü–∞ {diff})\n'
            
        if (diff == 0):
            desc += 'üí•üí•üí•ü§Øü§Øü§Øü§ëü§ëü§ë\n–∂—ë—Å–∫–æ –∑–∞—Ä–æ–ª–ª–∏–ª 0.1% –∏ –ø–æ–ª—É—á–∏–ª 10 –≥–º–æ–≤!!!!!!!!!\nüí•üí•üí•ü§Øü§Øü§Øü§ëü§ëü§ë\n\n'
            embed.color = discord.Color.pink()
            bonus = 9
        elif (diff <= 5):
            desc += '–Ω–∏—Ñ–∏–≥–∞—Å–µ–∞—Ñ–∏–≥–µ—Ç—å, –¥–µ—Ä–∂–∏ 5 –≥–º–æ–≤ üëè\n\n'
            embed.color = discord.Color.orange()
            bonus = 4
        elif (diff <= 50):
            desc += '–°–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –¥–µ–Ω—å, –ø–æ–ª—É—á–∞–π —Å—Ä–∞–∑—É 2 –ì–ú–∞ üòé\n\n'
            embed.color = discord.Color.gold()
            bonus = 1
        
        user['count'] += bonus + 1
        user['bonus'] += bonus
        user['done'] = True
        self.save()

        c = user['count']
        desc += f'–¢–≤–æ–π —Å—á—ë—Ç: {c}'
        
        embed.description = desc
        query = user.get('custom_query') or 'good morning'
        embed.set_image(url=myutils.search_gif(query))
        await msg.channel.send(reference=msg, embed=embed)
    
    def get_user(self, id):
        return self.users.get(str(id))
    
    def register_user(self, id):
        self.users[str(id)] = {'count': 0, 'bonus': 0, 'done': False}
        return self.users[str(id)]
    
    def load(self):
        f = open('data/gmusers.json', 'r')
        json_obj = f.read()
        self.users = json.loads(json_obj)
        
    def save(self):
        self.sort()
        json_obj = json.dumps(self.users, indent=4)
        f = open('data/gmusers.json', 'w')
        f.write(json_obj)
        
    def sort(self):
        self.users = dict(sorted(self.users.items(), key = lambda x:x[1]['count'], reverse=True))
    
    @tasks.loop(time=reset_time)
    async def reset(self):
        for id in self.users:
            self.users.get(id)['done'] = False
        self.save()
        
async def setup(bot):
    await bot.add_cog(GM(bot))