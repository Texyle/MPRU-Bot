from typing import Optional
import discord
from discord.ext import commands
from discord import app_commands
import random
import json
import myutils
import time
import datetime

class Servers(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.servers = []
        self.load_data()
    
    @app_commands.command(name='createserversmsg')
    async def create_msg(self, interaction: discord.Interaction, channel: discord.TextChannel):
        if interaction.user.id != 269105396587823104:
            await interaction.response.send_message('–Ω–µ-–∞', ephemeral=True)
            return
        view = ServersView()
        await channel.send(embed=self.build_servers_embed(), view=view)
        await interaction.response.send_message('–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ', ephemeral=True)
        
    def build_servers_embed(self):
        embed = discord.Embed(title='–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤', color=discord.Color.green())
        desc = ''
        desc += f'–î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n'
        timestamp = int(time.time())-1
        desc += f'–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: <t:{timestamp}:R>\n'
        for server in self.servers:
            server_status = myutils.get_server_status(server['ip'])
            desc += f'\n> **{server["name"]}**\n'
            desc += f'> IP: ``{server["ip"]}``\n'
            status = '–û–Ω–ª–∞–π–Ω üü¢' if server_status['online'] else '–û—Ñ—Ñ–ª–∞–π–Ω üî¥'
            desc += f'> –°—Ç–∞—Ç—É—Å: ``{status}``\n'
            if server_status['online']:
                desc += f'> –ò–≥—Ä–æ–∫–∏: ``{server_status["players"]["online"]}/{server_status["players"]["max"]}``\n'
            else:
                desc += f'> –ò–≥—Ä–æ–∫–∏: ``0/0``\n'    
            
        embed.description = desc
        embed.set_footer(text='–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥')
        return embed
        
    def load_data(self):
        file = open('data/servers.json', 'r')
        json_obj = file.read()
        self.servers = json.loads(json_obj)
        file.close()
        
class ServersView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        
    @discord.ui.button(label='–û–±–Ω–æ–≤–∏—Ç—å', style=discord.ButtonStyle.blurple, custom_id='update_button')
    async def update(self, interaction: discord.Interaction, button: discord.ui.Button):
        servers = interaction.client.get_cog('Servers')
        if servers == None:
            await interaction.response.send_message('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏', ephemeral=True)
            return
        
        await interaction.response.defer()
        
        embed = servers.build_servers_embed()
        await interaction.message.edit(content='', embed=embed)

async def setup(bot):
    await bot.add_cog(Servers(bot))